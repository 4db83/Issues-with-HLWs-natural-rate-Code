source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
paste0(FILE.INPUT.DIR, 'EA.data.upto.2019Q4.csv')
paste0(FILE.INPUT.DIR, 'EA.data.upto.2019Q4.csv','a')
?paset0
?paste0
sample.end
data.end.string <- paste0( toString(data.end[1])  ,"Q",toString(data.end[2])    )
data.end.string <- paste0( toString(sample.end[1])  ,"Q",toString(sample.end[2])    )
data.end.string <- paste0( toString(data.end[1])  ,"Q",toString(data.end[2])    )data.end.string
data.end.string
paste0(FILE.INPUT.DIR, 'EA.data.upto.', data.end.string, '.csv')
sample.end.string
FILE.NAME.OUT
DATA.FILE.2.BE.USED
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
DATA.FILE.2.BE.USED
data.end.string
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
ver
version
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
YLims = c(-2,6)
# YLims = c(-2,2)
## par(mfrow=c(3,1))
#op <- par(mfrow = c(3,1),
#          oma = c(5,4,0,0) + 0.5,
#          mar = c(0,0,-1.5,1) + 3.0,
#          mgp = c(2, .8, 0))
#
smoothed.rstar  = hlw.full$out.stage3$rstar.smoothed
filtered.rstar  = hlw.full$out.stage3$rstar.filtered
smoothed.g      = hlw.full$out.stage3$trend.smoothed
filtered.g      = hlw.full$out.stage3$trend.filtered
smoothed.z      = hlw.full$out.stage3$z.smoothed
filtered.z      = hlw.full$out.stage3$z.filtered
# now add the diffuse results.
# diff.filtered = diffuse.prior.stage3trendd.filtered
# diff.smoothed = diffuse.prior.stage3$trend.smoothed
# NOW DO THE PLOTTING RSTAR
pdf( paste0(country, "_", sample.start.string, "_plots.pdf") , width=8, height=5)
## smoothed
# plot(	y = smoothed.rstar   ,  x = dates, col = blu1, type="l", lwd = 3, lty=1, xlab = "", ylab = "", xaxt = "n" , ylim = YLims, las=1) ## the last bit xaxt = "n"  kills the x-axis labels
# lines(y = smoothed.g       ,  x = dates, col = red1, type="l", lwd = 3, lty=1)
# lines(y = smoothed.z       ,  x = dates, col = grn2, type="l", lwd = 3, lty=1)
## filtered
plot(	y = filtered.rstar   ,  x = dates, col = blu1, type="l", lwd = 3, lty=1, xlab = "", ylab = "", xaxt = "n" , ylim = YLims, las=1) ## the last bit xaxt = "n"  kills the x-axis labels
lines(y = filtered.g       ,  x = dates, col = red1, type="l", lwd = 3, lty=2)
lines(y = filtered.z       ,  x = dates, col = grn2, type="l", lwd = 3, lty=1)
###lines(y = smoothed.rstar2  ,  x = dates, col = blu1, type="l", lwd = 3, lty=2)
###lines(y = smoothed.g2      ,  x = dates, col = red1, type="l", lwd = 3, lty=2)
###lines(y = smoothed.z2      ,  x = dates, col = grn2, type="l", lwd = 3, lty=2)
# date labels every 7 or so quarters
labDates <- seq(head(dates,1), tail(dates, 1), by = "8 quarters")
axis.Date(side = 1, dates, at = labDates, format = "%Y", las = 1)
grid(29,NULL)
abline(h = 0 , lwd = 1)
# add legend
legend("topright", legend = c("rstar","trend growth","other factor"),
col=c(blu1, red1, grn2), lty=1, lwd = 3)
dev.off()
plot(	y = filtered.rstar   ,  x = dates, col = blu1, type="l", lwd = 3, lty=1, xlab = "", ylab = "", xaxt = "n" , ylim = YLims, las=1) ## the last bit xaxt = "n"  kills the x-axis labels
lines(y = filtered.g       ,  x = dates, col = red1, type="l", lwd = 3, lty=2)
lines(y = filtered.z       ,  x = dates, col = grn2, type="l", lwd = 3, lty=1)
data.Full
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
data.Full
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
raw.source.dir  <- '../data/R.source.data.2020.Sep/'
raw.source.dir
raw.source.dir
source('D:/_research/_current/HLW.correct/public.code/R.code/get.US.data.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/get.US.data.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/get.US.data.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/get.EA.data.R')
# LOAD REQUIRED LIBRARIES ----------------------------------------------------------------------------------------------
# List of required packages
pkgs <- c('zoo','tis','seasonal','ecb','RCurl')
# get packages that are not installed
get.pkgs <- pkgs[!pkgs %in% installed.packages()]
if(!length(get.pkgs)==0){cat('Getting packages\n'); for(lib in get.pkgs) {install.packages(lib, dependencies = TRUE) } }
sapply( get.pkgs, require, character = TRUE )
# LOAD PACKAGES
cat('Loading packages\n')
for(ii in pkgs) library(ii, character.only = TRUE)
# SET TO ONE TO SAVE DATA TO CSV FILE
save.data.2.csv     <- 1
get.new.AWMD.data   <- 1
download.data.vintage = '2020.Oct.5'
#------------------------------------------------------------------------------#
# Get Raw Data
#------------------------------------------------------------------------------#
# SET THE START AND END DATES OF THE DATA USED IN THE ESTIMATION
data.start 	    <- c(1971,1)
data.end        <- c(2020,2)
# Covert to strings
data.beg.string <- paste0( toString(data.start[1]),"Q",toString(data.start[2])  )
data.end.string <- paste0( toString(data.end[1])  ,"Q",toString(data.end[2])    )
# OUTPUT FILE DIRs and NAMEs
# main data store dir
if (!dir.exists('../data/')) {dir.create('../data/')}
# raw source dir in main data store dir
raw.source.dir  <- paste0('../data/R.source.data.',download.data.vintage,'/')
if (!dir.exists(raw.source.dir)) {dir.create(raw.source.dir)}
# data store dir for Matlab and R
store.data.dir  <- paste0('../data/R.data.for.estimation.',download.data.vintage,'/')
save.file.name  <- paste0(store.data.dir, 'EA.data.upto.', data.end.string, '.csv')
#------------------------------------------------------------------------------#
# Identify the date at which the core CPI series begins (Mnemonic: HEX)
core.cpi.start <- c(1987,4)
# IMPORT AREA WIDE MODEL DATA
# NOTE: HLW wrote: We seasonally adjust data rather than using HEXSA, HICPSA because of availability
awm.file <- paste0(raw.source.dir, 'awm19up18.csv')
# if (!file.exists(awm.file)){
if (get.new.AWMD.data) {
print(" Downloading data from eabcn.org network --> DONE")
download.file(url='https://eabcn.org/sites/default/files/awm19up18.csv', method='curl', destfile = awm.file )
}
#------------------------------------------------------------------------------#
# GET DATA FROM EABCN.ORG: must be connected to internet to download
#------------------------------------------------------------------------------#
# https://eabcn.org/sites/default/files/awm19up18.csv
awm.data <- read.table(awm.file, header=TRUE,sep=',')
# head(awm.data)
awm.start    <- c(as.numeric(substr(awm.data[1,'X'],1,4)),
as.numeric(substr(awm.data[1,'X'],6,7)))
gdp          <- tis(awm.data$YER,   start = awm.start, tif = 'quarterly')
cpi.nsa      <- tis(awm.data$HICP,  start = awm.start, tif = 'quarterly')
core.cpi.nsa <- tis(awm.data$HEX,   start = awm.start, tif = 'quarterly')
core.cpi.nsa <- window(core.cpi.nsa,start = core.cpi.start)
interest.q   <- tis(awm.data$STN,   start = awm.start, tif = 'quarterly')
# IMPORT ECB SDW SERIES FROM WAREHOUSE
source('D:/_research/_current/HLW.correct/public.code/R.code/get.CA.data.R')
raw.source.dir  <- paste0('../data/R.source.data.2020.Sep/'
)
L
source('D:/_research/_current/HLW.correct/public.code/R.code/get.CA.data.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/get.UK.data.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/get.UK.data.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/get.UK.data.R')
data.beg.string
data.end.string
source('D:/_research/_current/HLW.correct/public.code/R.code/get.US.data.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/get.US.data.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/get.US.data.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/get.UK.data.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/get.UK.data.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/get.EA.data.R')
vers
version
source('D:/_research/_current/HLW.correct/public.code/R.code/get.CA.data.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/get.CA.data.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/get.CA.data.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
FILE.INPUT.DIR
paste0(FILE.INPUT.DIR, 'EA..csv');
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
source('D:/_research/_current/HLW.correct/public.code/R.code/fit.HLW.R')
